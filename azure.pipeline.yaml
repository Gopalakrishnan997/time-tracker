trigger:
- main  # Replace with your main branch name

pr:
- '*'

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    # Download and install the CodeQL CLI.
    wget https://github.com/github/codeql-cli-binaries/releases/latest/download/codeql-linux64.zip
    unzip codeql-linux64.zip
    chmod +x codeql
    mv codeql /usr/local/bin/
  displayName: 'Install CodeQL CLI'
- script: |
    # Verify CodeQL installation.
    codeql --version
  displayName: 'Verify CodeQL Installation'

- script: |
    # Initialize the CodeQL database for Java.
    codeql database init --language java --source-root . --begin-tracing db
  displayName: 'Initialize CodeQL database'

- script: |
    # Run any pre-build tasks, for example, building your Java project.
    mvn clean install  # Replace with your build commands
  displayName: 'Build Java Project'

- script: |
    # Read the generated environment variables and set them for subsequent commands.
    json=$(cat db/temp/tracingEnvironment/start-tracing.json)
    for key in $(jq -r 'keys[]' <<< "$json"); do
      value=$(jq -r ".$key" <<< "$json")
      echo "##vso[task.setvariable variable=$key]$value"
    done
  displayName: 'Set CodeQL environment variables'

- script: |
    # Run your Java tests or other build steps.
    # Replace with your test or analysis commands.
    echo "Running Java tests"  # Example placeholder command
  displayName: 'Run Java Tests'

- script: |
    # Read and clear the generated environment variables to end build tracing.
    json=$(cat db/temp/tracingEnvironment/end-tracing.json)
    for key in $(jq -r 'keys[]' <<< "$json"); do
      value=$(jq -r ".$key" <<< "$json")
      echo "##vso[task.setvariable variable=$key]$value"
    done
  displayName: 'Clear CodeQL environment variables'

- script: |
    # Finalize the CodeQL database.
    codeql database finalize db
  displayName: 'Finalize CodeQL database'

# Other tasks such as codeql database analyze, codeql github upload-results, etc., can be added here.
